/********************************* FONTS *********************************/

@import url('https://rsms.me/inter/inter.css');

* {
	font-size: 1rem;
	font-family: InterVariable, Inter, sans-serif;
	font-feature-settings: 'liga' 1, 'calt' 1; /* fix for Chrome */
	font-variant-alternates: styleset(open-digits)
		character-variant(
			alt-1,
			alt-3,
			single-story-a,
			compact-lc-f,
			compact-lc-t,
			lc-l-with-tail,
			simplified-u
		);
	font-variant-ligatures: common-ligatures discretionary-ligatures contextual;
	line-height: 1;
}
@supports (font-variation-settings: normal) {
	* {
		font-family: InterVariable, sans-serif;
	}
}
button {
	font-weight: 400;
}
h1 {
	font-size: 3rem;
	font-weight: 900;
}
h2 {
	font-size: 2rem;
	font-weight: 800;
}
h3 {
	font-size: 1.5rem;
	font-weight: 700;
}
h4 {
	font-size: 1.25rem;
	font-weight: 800;
}
strong {
	font-weight: 800;
}
.gui-label {
	font-weight: 500;
}

/********************************* BOX SIZING *********************************/
*,
*::before,
*::after {
	box-sizing: border-box;
}

html {
	overflow: hidden;
}

/********************************* BODY *********************************/
body {
	/* darkest and lightest colours */
	--blackRGB: 0, 0, 0;
	--whiteRGB: 255, 255, 255;
	--white: rgb(var(--whiteRGB));
	--black: rgb(var(--blackRGB));

	/* useful for rgba(var(--bgRGB), opacity) */
	/* defaults to light mode, dark mode in next definition */
	--bgRGB: var(--whiteRGB);
	--fgRGB: var(--blackRGB);
	--bg-col: rgb(var(--bgRGB));
	--fg-col: rgb(var(--fgRGB));

	/* transparency squares of the canvas background*/
	--transpSquareCol0: var(--bg-col);
	--transpSquareCol1: rgba(var(--fgRGB), 0.1);
	--squareSize: 30px;

	/* main colours */
	--base-col: #7685f7;
	--text-col-on-base: var(--bg-col);
	--hover-col: #bffb50;
	--focus-col: var(--base-col);
	--info-col: #a830f6;
	--error-col: #e95e2a;
	--divider-col: rgba(var(--fgRGB), 0.1);
	--inactive-col: transparent;

	/* text colours */
	--text-col: var(--base-col);
	--text-col-on-hover: var(--black);
	--text-align: left;
	--text-on-inactive-col: var(--text-col);
	--link-col: var(--base-col);
	--link-hover-col: var(--hover-col);

	/* console colours */
	--console-bgcol: var(--inactive-col);
	--console-textcol: var(--text-col);

	/* input colours */
	--input-text-bg-col: var(--bg-col);
	--input-text-text-col: var(--text-col);

	/* dimensions */
	--button-padding-sides: 0.667rem;
	--corner-radius: 0;
	--line-width: 2px;
	--base-height: 2.4rem;
	--spacing-y: calc(var(--base-height) / 2);
	--spacing-y-label: calc(var(--spacing-y) / 2);
	--spacing-x: calc(var(--base-height) / 4);

	/* mouse targets (eg., range inputs, radios) */
	--target-col: var(--base-col);
	--target-diameter: 1.5rem;

	/* focus outline */
	--focus-outline-offset: calc(1.5 * var(--line-width));
	--focus-outline: var(--line-width) dotted var(--focus-col);

	/* animation */
	--transition: all 0.25s ease;

	/* body styles */
	margin: 0;
	padding: 0;
	background-color: var(--bg-col);
}

/* -------------------------------- DARK MODE ------------------------------- */
body:where(.dark-mode) {
	/* use: `body:where(.dark-mode) .yourElement {` as a prefix
	to style the dark mode of any element */
	--bgRGB: var(--blackRGB);
	--fgRGB: var(--whiteRGB);
}

/********************************* SELECTIONS *********************************/
::-moz-selection {
	/* Code for Firefox */
	color: var(--text-col-on-hover);
	background: var(--hover-col);
}

::selection {
	color: var(--text-col-on-hover);
	background: var(--hover-col);
}

/********************************* GUI *********************************/
#gui,
.tab {
	display: flex;
	flex-direction: column;
	gap: var(--spacing-y);
}
#gui {
	width: 35rem;
	padding: 1.5rem 1rem;

	height: 100vh;
	overflow-y: auto;

	background-color: var(--bg-col);
	color: var(--text-col);
}

.tab {
	min-height: 500px;
	border-bottom: var(--line-width) solid var(--base-col);
}

.button-group {
	display: flex;
	gap: var(--spacing-x);
}

.row {
	flex-direction: row;
}

.column {
	flex-direction: column;
}

.panel summary {
	/* background-color: red; */
	border-bottom: solid var(--base-col) var(--line-width);
	padding: 0 0 0.5rem 0;
	margin: 0 0 0.5rem 0;
}

summary:hover {
	cursor: pointer;
}

/********************************* SCROLLBARS *********************************/
/* modern browsers with `scrollbar-*` support */
@supports (scrollbar-width: auto) {
	* {
		scrollbar-color: var(--base-col) var(--bg-col);
		scrollbar-width: thin;
	}
}

/* legacy browsers with `::-webkit-scrollbar-*` support */
@supports selector(::-webkit-scrollbar) {
	*::-webkit-scrollbar-thumb {
		background: var(--base-col);
		border-radius: var(--corner-radius);
	}
	*::-webkit-scrollbar-track {
		background: var(--bg-col);
	}
	*::-webkit-scrollbar {
		background: var(--bg-col);
		width: calc(0.5 * var(--target-diameter));
	}
}

/********************************* LOGO STYLING *********************************/
#logo {
	min-height: 4rem;
	background-image: url('assets/generator-logo.svg');
	background-position-x: center;
	background-position-y: center;
	background-size: contain;
	background-repeat: no-repeat;
	margin-bottom: 0.5rem;
}

body:where(.dark-mode) #logo {
	background-image: url('assets/dark-mode/generator-logo.svg');
}

.footer-logo {
	position: fixed;
	bottom: 1rem;
	right: 1rem;
}

.p5catalyst-logo {
	height: 2.8rem;
	width: 6rem;
	position: relative;
	right: -0.5rem;
	bottom: -0.5rem;
	background-image: url('assets/p5catalyst-logo.svg');
	background-position-x: left;
	background-position-y: center;
	background-size: contain;
	background-repeat: no-repeat;
}

body:where(.dark-mode) .p5catalyst-logo {
	background-image: url('assets/dark-mode/p5catalyst-logo.svg');
}

/********************************* TEXTFIELD *********************************/
.gui-textfield {
	margin: 0.5em 0;
}

.gui-textfield.info {
	background-color: var(--info-col);
	border-radius: 100em;
	padding: 0.5em 1em;
	color: var(--black);
}

/********************************* CONTROLLER *********************************/
.controller-wrapper {
	display: flex;
	flex-direction: row;
	gap: var(--spacing-x);
	align-items: center;
	justify-content: space-between;
}

.gui-controller {
	width: 100%;
	display: flex;
	flex-direction: column;
	gap: var(--spacing-y-label);
}

.gui-controller[disabled] {
	background-color: var(--inactive-col);
	opacity: 0.5;
}

/* default behaviour */
button,
input,
select,
textarea {
	width: 100%;
}

/********************************* LABEL *********************************/
.gui-label {
	margin: 0;
	padding: 0;
	font-size: 1em;
}

/********************************* CONSOLE *********************************/
.gui-console {
	text-align: center;
	padding: 0.5em;
	background: var(--console-bgcol);
	color: var(--console-textcol);
	border-radius: 3px;
}

.gui-console-error {
	color: var(--error-col);
	font-weight: 800;
}

/********************************* DIVIDER *********************************/
hr {
	border: none;
	height: var(--line-width);
	background-color: var(--divider-col);
	border-radius: var(--corner-radius);
	width: 100%;
}

/********************************* HEADINGS *********************************/
h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 0;
	padding: 0;
	margin-bottom: 0.25em;
}

/********************************* BUTTON *********************************/
button {
	cursor: pointer;
	background-color: var(--base-col);
	color: var(--text-col-on-base);
	border: none;
	transition: var(--transition);
	border-radius: var(--corner-radius);
	min-height: var(--base-height);
	padding: 0 var(--button-padding-sides);
	font-size: inherit;
	text-align: var(--text-align);
}

button:hover {
	background-color: var(--hover-col);
	color: var(--text-col-on-hover);
}

button:focus:hover {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
	border-radius: var(--corner-radius);
}

button:focus {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
	border-radius: var(--corner-radius);
}

/********************************* TOGGLE *********************************/
button.toggle {
	display: inline-flex;
	position: relative;
	background-color: transparent;
	border-radius: 0;
	padding: 0;
	align-items: stretch;
}

button.toggle:focus {
	outline: none;
}

/* Span elements within the toggle button */
button.toggle span {
	display: inline-block;
	transition: var(--transition);
	width: 100%;
	align-content: center;
	text-align: var(--text-align);
	padding: 0 var(--button-padding-sides);
}

button.toggle span:first-child {
	border-bottom-right-radius: 0;
	border-top-right-radius: 0;
	border-bottom-left-radius: var(--corner-radius);
	border-top-left-radius: var(--corner-radius);

	background-color: var(--base-col);
	color: var(--text-col-on-base);
}

button.toggle span:last-child {
	border-bottom-right-radius: var(--corner-radius);
	border-top-right-radius: var(--corner-radius);
	border-bottom-left-radius: 0;
	border-top-left-radius: 0;

	background-color: var(--inactive-col);
	color: var(--text-on-inactive-col);
}

button.toggle[toggled] span:first-child {
	background-color: var(--inactive-col);
	color: var(--text-on-inactive-col);
}

button.toggle[toggled] span:last-child {
	background-color: var(--base-col);
	color: var(--text-col-on-base);
}

button.toggle span:first-child:hover {
	background-color: var(--base-col);
	color: var(--text-col-on-base);
}

button.toggle span:last-child:hover {
	background-color: var(--hover-col);
	color: var(--text-col-on-hover);
}

button.toggle[toggled] span:first-child:hover {
	background-color: var(--hover-col);
	color: var(--text-col-on-hover);
}

button.toggle[toggled] span:last-child:hover {
	background-color: var(--base-col);
	color: var(--text-col-on-base);
}

button.toggle:focus span:first-child {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
	z-index: 1;
}

button.toggle:focus span:last-child {
	outline: none;
	z-index: 0;
}

button.toggle[toggled]:focus span:first-child {
	outline: none;
	z-index: 0;
}

button.toggle[toggled]:focus span:last-child {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
	z-index: 1;
}

/********************************* SELECT *********************************/
select {
	/* removing the default dropdown arrow */
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;

	min-height: var(--base-height);
	padding: 0 var(--button-padding-sides);
	margin: 0;
	width: 100%;
	outline: none;

	cursor: pointer;
	text-align: var(--text-align);
	border-radius: var(--corner-radius);
	border: var(--line-width) solid var(--base-col);
	transition: var(--transition);

	--arrow-url: url('data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%3Csvg%20width%3D%2222.498px%22%20height%3D%2222.11px%22%20version%3D%221.1%22%20viewBox%3D%22352.21%20170.29%2022.498%2022.11%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Abx%3D%22https%3A%2F%2Fboxy-svg.com%22%3E%3Cpath%20class%3D%22select-arrow-svg%22%20d%3D%22m363.46%20183.85-4.9997-5.0233h10z%22%20fill%3D%22%237685F7%22%20stroke-width%3D%220px%22%20bx%3Ashape%3D%22triangle%20-373.34%20-187.05%2019.493%209.792%200.5%200%201%406f3e846f%22%2F%3E%3C%2Fsvg%3E');
	/* Some browsers will not display the caret when using calc, so we put the fallback first */
	background: var(--arrow-url) var(--input-text-bg-col) no-repeat 98.5%;
	background: var(--arrow-url) var(--input-text-bg-col) no-repeat
		calc(100% - var(--button-padding-sides));
	color: var(--input-text-text-col);
}

select::-ms-expand {
	/* remove arrow */
	display: none;
}

select:hover {
	border-color: var(--hover-col);
}

select:focus {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
}

option {
	max-width: inherit;
	background-color: var(--bg-col);
	color: var(--text-col);
}
option:hover {
	background-color: var(--hover-col);
	color: var(--text-col-on-hover);
}

/********************************* TEXTAREA *********************************/
textarea {
	background-color: var(--input-text-bg-col);
	color: var(--input-text-text-col);
	padding: var(--button-padding-sides);
	border: var(--line-width) solid var(--base-col);
	border-radius: var(--corner-radius);
	border-bottom-right-radius: 0;

	min-height: 3.5rem;
	height: 3.5rem;

	font: inherit;
	font-style: normal;
	resize: vertical;
	overflow-y: auto;
	transition: var(--transition);
}

textarea:hover {
	border-color: var(--hover-col);
}

textarea:focus {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
}

/********************************* COLOURTEXTAREA *********************************/
.colour-text-area-display {
	width: 100%;
	display: flex;
	flex-flow: row wrap;
	align-content: flex-end;
	justify-content: flex-start;
	/*	gap: var(--line-width);*/
	gap: calc(var(--target-diameter) * 0.25);
	transition: var(--transition);
}

.colour-text-area-block {
	width: var(--target-diameter);
	height: calc(var(--target-diameter) * 0.5);
}

/********************************* TEXTBOX *********************************/
input[type='text'] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	min-height: var(--base-height);
	padding: 0 var(--button-padding-sides);
	background-color: var(--input-text-bg-col);
	color: var(--input-text-text-col);
	border-radius: var(--corner-radius);
	border: var(--line-width) solid var(--base-col);
	transition: var(--transition);
}

input[type='text']:hover {
	border-color: var(--hover-col);
}

input[type='text']:focus {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
	border-radius: var(--corner-radius);
}

/********************************* RANGE *********************************/
input[type='range'] {
	-webkit-appearance: none;
	appearance: none;
	background: transparent;
	cursor: pointer;
	width: 100%;
	height: var(--target-diameter);
}

/* Removes default focus */
input[type='range']:focus {
	outline: none;
}

/***** Chrome, Safari, Opera and Edge Chromium styles *****/
/* slider track */
input[type='range']::-webkit-slider-runnable-track {
	background-color: var(--base-col);
	border-radius: var(--corner-radius);
	height: var(--line-width);
}

/* slider thumb */
input[type='range']::-webkit-slider-thumb {
	-webkit-appearance: none;
	appearance: none;
	margin-top: calc((var(--line-width) - var(--target-diameter)) * 0.5);

	background-color: var(--target-col);
	height: var(--target-diameter);
	width: var(--target-diameter);
	border-radius: 100%;
	transition: var(--transition);
}

input[type='range']:hover::-webkit-slider-thumb {
	background-color: var(--hover-col);
	color: var(--text-col-on-hover);
}

input[type='range']:focus::-webkit-slider-thumb {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
}

/******** Firefox styles ********/
/* slider track */
input[type='range']::-moz-range-track {
	background-color: var(--base-col);
	border-radius: var(--corner-radius);
	height: var(--line-width);
}

/* slider thumb */
input[type='range']::-moz-range-thumb {
	border: none;
	background-color: var(--target-col);
	height: var(--target-diameter);
	width: var(--target-diameter);
	border-radius: 100%;
	transition: var(--transition);
}

input[type='range']:hover::-moz-range-thumb {
	background-color: var(--hover-col);
	color: var(--text-col-on-hover);
}

input[type='range']:focus::-moz-range-thumb {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
}

/********************************* RADIO *********************************/
input[type='radio'] {
	-webkit-appearance: none;
	appearance: none;

	display: grid;
	place-content: center;
	background-color: var(--white);
	width: var(--target-diameter);
	height: var(--target-diameter);
	border: var(--line-width) solid var(--base-col);
	border-radius: var(--corner-radius);

	cursor: pointer;
	transition: var(--transition);
}

input[type='radio']:hover {
	border-color: var(--hover-col);
}

input[type='radio']:focus {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
}

input[type='radio']:hover::before {
	transform: scale(1);
	box-shadow: inset var(--target-diameter) var(--target-diameter)
		var(--hover-col);
}

input[type='radio']::before {
	content: '';
	width: var(--target-diameter);
	height: var(--target-diameter);
	transform: scale(0.75, 0);
	box-shadow: inset var(--target-diameter) var(--target-diameter)
		var(--target-col);
	border: none;
	border-radius: var(--corner-radius);
	transition: var(--transition);
}

input[type='radio']:checked::before {
	transform: scale(1);
}

/********************************* RANGE-SLIDER *********************************/

.dual-range-input {
	--dri-height: 1.5rem;
	--dri-thumb-width: var(--target-diameter);
	--dri-thumb-height: var(--target-diameter);
	--dri-thumb-color: var(--base-col);
	--dri-thumb-hover-color: var(--hover-col);
	--dri-thumb-active-color: var(--hover-col);
	--dri-thumb-border-color: none;
	--dri-thumb-border-radius: var(--corner-radius);
	--dri-thumb-border-width: none;
	--dri-track-height: var(--line-width);
	--dri-track-border-radius: 0;
	--dri-track-color: var(--base-col);
	--dri-track-filled-color: var(--hover-col);
	display: flex;
	height: var(--dri-height);
	max-width: 100%;
	width: 100%;
	box-sizing: border-box;
	padding-inline-end: calc(var(--dri-thumb-width) * 2);
}
.dual-range-input input {
	-webkit-tap-highlight-color: transparent;
	-webkit-appearance: none;
	appearance: none;
	background: none;
	border-radius: 0;
	flex-basis: calc(50% + var(--dri-thumb-width));
	flex-shrink: 0;
	font-size: inherit;
	height: 100%;
	margin: 0;
	min-width: var(--dri-thumb-width);
	outline: none;
}
.dual-range-input input::-moz-range-track {
	background-color: var(--dri-track-color);
	background-repeat: no-repeat;
	box-sizing: border-box;
	height: var(--dri-track-height);
}
.dual-range-input input:first-child::-moz-range-track {
	border-start-start-radius: var(--dri-track-border-radius);
	border-end-start-radius: var(--dri-track-border-radius);
	background-image: linear-gradient(
		to right,
		var(--dri-track-color) var(--dri-gradient-position),
		var(--dri-track-filled-color) var(--dri-gradient-position)
	);
}
[dir='rtl'] .dual-range-input input:first-child::-moz-range-track {
	background-image: linear-gradient(
		to left,
		var(--dri-track-color) var(--dri-gradient-position),
		var(--dri-track-filled-color) var(--dri-gradient-position)
	);
}
.dual-range-input input:last-child::-moz-range-track {
	border-start-end-radius: var(--dri-track-border-radius);
	border-end-end-radius: var(--dri-track-border-radius);
	background-image: linear-gradient(
		to right,
		var(--dri-track-filled-color) var(--dri-gradient-position),
		var(--dri-track-color) var(--dri-gradient-position)
	);
}
[dir='rtl'] .dual-range-input input:last-child::-moz-range-track {
	background-image: linear-gradient(
		to left,
		var(--dri-track-filled-color) var(--dri-gradient-position),
		var(--dri-track-color) var(--dri-gradient-position)
	);
}

.dual-range-input input::-moz-range-thumb {
	-webkit-appearance: none;
	appearance: none;
	background-color: var(--dri-thumb-color);
	border-radius: var(--dri-thumb-border-radius);
	border: var(--dri-thumb-border-width) solid var(--dri-thumb-border-color);
	box-shadow: none;
	box-sizing: border-box;
	height: var(--dri-thumb-height);
	width: var(--dri-thumb-width);
	max-width: 99.99%;
}
.dual-range-input input:not([data-ready='true'])::-moz-range-thumb {
	opacity: 0;
}
.dual-range-input input:hover::-moz-range-thumb {
	background-color: var(--dri-thumb-hover-color);
	border-color: var(--dri-thumb-border-hover-color);
}
.dual-range-input input:active::-moz-range-thumb {
	background-color: var(--dri-thumb-active-color);
	border-color: var(--dri-thumb-border-active-color);
}
.dual-range-input input:focus-visible::-moz-range-thumb {
	background-color: var(--dri-thumb-active-color);
	border-color: var(--dri-thumb-border-active-color);
}
.dual-range-input input::-webkit-slider-runnable-track {
	background-color: var(--dri-track-color);
	background-repeat: no-repeat;
	box-sizing: border-box;
	height: var(--dri-track-height);
}
.dual-range-input input:first-child::-webkit-slider-runnable-track {
	border-start-start-radius: var(--dri-track-border-radius);
	border-end-start-radius: var(--dri-track-border-radius);
	background-image: linear-gradient(
		to right,
		var(--dri-track-color) var(--dri-gradient-position),
		var(--dri-track-filled-color) var(--dri-gradient-position)
	);
}
[dir='rtl'] .dual-range-input input:first-child::-webkit-slider-runnable-track {
	background-image: linear-gradient(
		to left,
		var(--dri-track-color) var(--dri-gradient-position),
		var(--dri-track-filled-color) var(--dri-gradient-position)
	);
}
.dual-range-input input:last-child::-webkit-slider-runnable-track {
	border-start-end-radius: var(--dri-track-border-radius);
	border-end-end-radius: var(--dri-track-border-radius);
	background-image: linear-gradient(
		to right,
		var(--dri-track-filled-color) var(--dri-gradient-position),
		var(--dri-track-color) var(--dri-gradient-position)
	);
}
[dir='rtl'] .dual-range-input input:last-child::-webkit-slider-runnable-track {
	background-image: linear-gradient(
		to left,
		var(--dri-track-filled-color) var(--dri-gradient-position),
		var(--dri-track-color) var(--dri-gradient-position)
	);
}
.dual-range-input input::-webkit-slider-thumb {
	-webkit-appearance: none;
	appearance: none;
	background-color: var(--dri-thumb-color);
	border-radius: var(--dri-thumb-border-radius);
	border: var(--dri-thumb-border-width) solid var(--dri-thumb-border-color);
	box-shadow: none;
	box-sizing: border-box;
	height: var(--dri-thumb-height);
	width: var(--dri-thumb-width);
	/* margin-top: calc(var(--dri-track-height) / 2);
  transform: translateY(-50%); */
}
.dual-range-input input:not([data-ready='true'])::-webkit-slider-thumb {
	opacity: 0;
}
.dual-range-input input:hover::-webkit-slider-thumb {
	background-color: var(--dri-thumb-hover-color);
	border-color: var(--dri-thumb-border-hover-color);
}
.dual-range-input input:active::-webkit-slider-thumb {
	background-color: var(--dri-thumb-active-color);
	border-color: var(--dri-thumb-border-active-color);
}
.dual-range-input input:focus-visible::-webkit-slider-thumb {
	background-color: var(--dri-thumb-active-color);
	border-color: var(--dri-thumb-border-active-color);
}

/********************************* CHECKBOX *********************************/
input[type='checkbox'] {
	-webkit-appearance: none;
	appearance: none;

	display: grid;
	place-content: center;
	background-color: var(--white);
	width: var(--target-diameter);
	height: var(--target-diameter);
	border: var(--line-width) solid var(--base-col);
	border-radius: var(--corner-radius);

	cursor: pointer;
	transition: var(--transition);
	margin: 0;
}
input[type='checkbox']:hover {
	border-color: var(--hover-col);
}
input[type='checkbox']:focus {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
}
input[type='checkbox']:hover::before {
	transform: scale(1);
	box-shadow: inset var(--target-diameter) var(--target-diameter)
		var(--hover-col);
}
input[type='checkbox']::before {
	content: '';
	width: var(--target-diameter);
	height: var(--target-diameter);
	transform: scale(0.75, 0);
	box-shadow: inset var(--target-diameter) var(--target-diameter)
		var(--target-col);
	border: none;
	border-radius: var(--corner-radius);
	transition: var(--transition);
}
input[type='checkbox']:checked::before {
	transform: scale(1);
}

/********************************* XY SLIDER *********************************/
.xyslider {
	width: 100%;
	/* constrains height: */
	/* max-width: 20rem; */
	aspect-ratio: 1;

	background-color: none;
	background-repeat: round;
	/* for 5 stops per quadrant */
	background-size: 12.5% 12.5%;
	background-image: radial-gradient(
		circle,
		var(--base-col) 1px,
		rgba(0, 0, 0, 0) 1.5px
	);
	background-position: center;
	cursor: pointer;

	transition: var(--transition);

	border-radius: var(--corner-radius);
	border: var(--line-width) solid var(--base-col);
}

.xyslider:hover {
	border-color: var(--hover-col);
}

.xyslider .handle {
	position: relative;
	width: var(--target-diameter);
	height: var(--target-diameter);
	background-color: var(--base-col);
	border-radius: var(--target-diameter);
	cursor: move;
	top: calc(50% - var(--target-diameter) / 2);
	left: calc(50% - var(--target-diameter) / 2);

	transition: background-color 0.25s ease;
}

.xyslider .handle:hover {
	background-color: var(--hover-col);
}

.xyslider .handle:active {
	outline: var(--focus-outline);
	outline-offset: var(--focus-outline-offset);
	border-radius: 100%;
}

/********************************* COLOUR BOXES *********************************/
.colour-boxes {
	width: 100%;
	display: flex;
	flex-flow: row wrap;
	align-content: flex-end;
	justify-content: flex-start;
	gap: calc(var(--target-diameter) * 0.25);
	transition: var(--transition);
}

.colour-boxes input[type='radio'] {
	margin: 0;
	border: none;
}

.colour-boxes input[type='radio']:hover,
.colour-boxes input[type='radio']:checked:hover {
	border: var(--line-width) solid var(--hover-col);
}

.colour-boxes input[type='radio']:checked {
	border: var(--line-width) solid var(--base-col);
}

.colour-boxes input[type='radio']::before {
	display: none;
}

.colour-boxes input[type='radio']:hover::before {
	display: none;
}

.colour-boxes input[type='radio']:checked::before {
	display: none;
}

/********************************* MULTI COLOUR BOXES *********************************/
.colour-boxes input[type='checkbox'] {
	margin: 0;
	border: none;
}
.colour-boxes input[type='checkbox']:hover,
.colour-boxes input[type='checkbox']:checked:hover {
	border: var(--line-width) solid var(--hover-col);
}
.colour-boxes input[type='checkbox']:checked {
	border: var(--line-width) solid var(--base-col);
}
.colour-boxes input[type='checkbox']::before {
	display: none;
}
.colour-boxes input[type='checkbox']:hover::before {
	display: none;
}
.colour-boxes input[type='checkbox']:checked::before {
	display: none;
}

/********************************* CREMENTER *********************************/
.crementer {
	display: flex;
	width: 100%;
	align-items: center;
}
.crementer > * {
	width: 100%;
}
.crementer span {
	height: var(--base-height);
	background-color: var(--base-col);
	color: var(--text-col-on-base);
	display: flex;
	align-items: center;
	justify-content: center;
}
.crementer button {
	text-align: center;
}

/********************************* DARK MODE BUTTON *********************************/

.dark-mode-button {
	position: fixed;
	top: 1rem;
	right: 1rem;
	z-index: 1;

	background-color: transparent;
	background-repeat: no-repeat;
	background-size: contain;
	width: 1.75rem;
	min-height: 1.75rem;
	padding: 0;
	border-radius: 100%;

	transition: none;
}
.dark-mode-button:hover {
	border-radius: 100%;
	background-color: transparent;
}
.dark-mode-button:focus {
	border-radius: 100%;
	outline: none;
}
.dark-mode-button:focus:hover {
	border-radius: 100%;
	outline: none;
}

.dark-mode-button--light {
	background-image: url('assets/dark-mode-button/light-mode-icon.svg');
}
.dark-mode-button--dark {
	background-image: url('assets/dark-mode-button/dark-mode-icon.svg');
}
.dark-mode-button--auto {
	background-image: url('assets/dark-mode-button/auto-mode-icon.svg');
}
body:where(.dark-mode) .dark-mode-button--light {
	background-image: url('assets/dark-mode-button/light-mode-icon.svg');
}
body:where(.dark-mode) .dark-mode-button--dark {
	background-image: url('assets/dark-mode-button/dark-mode-icon.svg');
}
body:where(.dark-mode) .dark-mode-button--auto {
	background-image: url('assets/dark-mode-button/auto-mode-icon.svg');
}

/********************************* VIDEO LOADING *********************************/
#vidLoad {
	margin: auto;
	padding: 0;
	animation-name: rotate;
	animation-duration: 2s;
	animation-iteration-count: infinite;
	animation-direction: normal;
	animation-timing-function: linear;
}

#vidLoad > div {
	width: 2em;
	height: 2em;
}

#vidLoad > div:before,
#vidLoad > div:after {
	content: '';
	display: inline-block;
	width: 1em;
	height: 2em;
}

#vidLoad > div:before {
	background-color: var(--base-col);
	border-top-left-radius: 1em;
	border-bottom-left-radius: 1em;
}

#vidLoad > div:after {
	background-color: var(--inactive-col);
	border-top-right-radius: 1em;
	border-bottom-right-radius: 1em;
}

@keyframes rotate {
	0% {
		rotate: 0deg;
	}

	100% {
		rotate: 360deg;
	}
}

/********************************* CONTACT SECTION *********************************/
#contact {
	/*	margin-top: 1em;*/
	font-size: 0.8em;
}

a {
	color: var(--link-col);
	transition: var(--transition);
}

a:hover {
	color: var(--link-hover-col);
}

/* -------------------------------- DIE ICON -------------------------------- */
.die-icon {
	height: var(--base-height);
	width: var(--base-height);

	opacity: 1;
	cursor: pointer;
	transition: var(--transition);

	background-size: contain;
	background-repeat: no-repeat;
	background-origin: content-box;
}

.die-icon--disabled {
	opacity: 0.333;
}

.die-icon--1 {
	background-image: url('assets/dice/die (1).svg');
}
.die-icon--2 {
	background-image: url('assets/dice/die (2).svg');
}
.die-icon--3 {
	background-image: url('assets/dice/die (3).svg');
}
.die-icon--4 {
	background-image: url('assets/dice/die (4).svg');
}
.die-icon--5 {
	background-image: url('assets/dice/die (5).svg');
}
.die-icon--6 {
	background-image: url('assets/dice/die (6).svg');
}
body:where(.dark-mode) .die-icon--1 {
	background-image: url('assets/dice/die (1).svg');
}
body:where(.dark-mode) .die-icon--2 {
	background-image: url('assets/dice/die (2).svg');
}
body:where(.dark-mode) .die-icon--3 {
	background-image: url('assets/dice/die (3).svg');
}
body:where(.dark-mode) .die-icon--4 {
	background-image: url('assets/dice/die (4).svg');
}
body:where(.dark-mode) .die-icon--5 {
	background-image: url('assets/dice/die (5).svg');
}
body:where(.dark-mode) .die-icon--6 {
	background-image: url('assets/dice/die (6).svg');
}

/********************************* CANVAS SECTION *********************************/
#canvas-workarea {
	background-color: var(--transpSquareCol0);
	display: flex;
	flex-direction: row;
	width: 100%;
	padding: 1em;
}

main {
	display: flex;
	flex-direction: row;
	gap: 0;
	width: 100%;
	height: 100%;
	margin: 0;
	padding: 0;
}

canvas,
.p5Canvas > svg {
	display: block;
	margin: auto;

	background-image: linear-gradient(
			45deg,
			var(--transpSquareCol1) 25%,
			transparent 25%
		),
		linear-gradient(-45deg, var(--transpSquareCol1) 25%, transparent 25%),
		linear-gradient(45deg, transparent 75%, var(--transpSquareCol1) 75%),
		linear-gradient(-45deg, transparent 75%, var(--transpSquareCol1) 75%);

	background-size: var(--squareSize) var(--squareSize);
	background-position: 0 0, 0 calc(var(--squareSize) / 2),
		calc(var(--squareSize) / 2) calc(var(--squareSize) / -2),
		calc(var(--squareSize) / -2) 0px;
	background-repeat: repeat;

	cursor: crosshair;
}

.p5Canvas > svg {
	display: none;
	position: relative;
	z-index: 1000;
}

/********************************* DIALOG *********************************/
/* based on implementation at: https://github.com/Stanko/cca/blob/dev/docs/index.html#L78-L91 */
html:has(dialog[open]) {
	overflow: hidden;
	touch-action: none;
}

html:has(dialog[open]) dialog {
	touch-action: auto;
}

html:has(dialog[open]) body {
	margin-right: none; /*var(--scrollbar-width);*/
}

dialog::backdrop {
	background: none;
	-webkit-backdrop-filter: blur(1rem);
	backdrop-filter: blur(1rem);
}

.dialog {
	align-items: flex-end;
	background-color: transparent;
	border: none;
	height: 100%;
	justify-content: center;
	align-items: center;
	max-height: 100%;
	max-width: 100%;
	overflow: hidden;
	position: fixed;
	inset: 0;
	width: 100%;
}

.dialog[open] {
	display: flex;
}

@media (min-width: 600px) {
	.dialog {
		align-items: center;
	}
}

@keyframes dialog-backdrop-in {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
		transform: none;
	}
}

button.dialog-backdrop-close {
	inset: 0;
	position: absolute;
	background-color: rgba(var(--bgRGB), 0.5);
	opacity: 0;
}

.dialog[open] button.dialog-backdrop-close {
	animation: dialog-backdrop-in 250ms ease-out forwards;
}

@media (prefers-reduced-motion: reduce) {
	.dialog[open] button.dialog-backdrop-close {
		animation: none;
		opacity: 1;
	}
}

button.dialog-close {
	opacity: 1;
	position: absolute;
	transition: var(--transition);
	z-index: 1;
	border-radius: var(--corner-radius);
	padding: 0;

	display: flex;
	align-items: center;
	justify-content: center;

	right: -3rem;
	top: 0;

	min-width: 2rem;
	width: 2rem;
	min-height: 2rem;
	height: 2rem;
}

button.dialog-close:focus-visible,
button.dialog-close:hover {
	opacity: 1;
	background-color: var(--hover-col);
	color: var(--text-col-on-hover);
}

.dialog-content {
	border-radius: var(--corner-radius);
	height: 90%;
	max-height: 42rem;
	max-width: 38rem;
	/* overflow: hidden; */
	position: relative;
	width: 100%;
	opacity: 0;

	color: var(--base-col);
}

.dialog[open] .dialog-content {
	animation: dialog-content-scale-in 250ms ease-out forwards;
}

.dialog-content-wrapper > *:first-child {
	margin-top: 0;
}

.dialog-prompt-form {
	display: flex;
	flex-direction: row;
	width: 100%;
	gap: calc(var(--target-diameter) / 2);
}
.dialog-prompt-form button {
	width: fit-content;
}

.dialog-prompt-input {
	width: 100%;
}

@keyframes dialog-content-scale-in {
	from {
		opacity: 0;
		transform: scale(0.95);
	}

	to {
		opacity: 1;
		transform: none;
	}
}

@media (prefers-reduced-motion: reduce) {
	.dialog[open] .dialog-content {
		animation: none;
		opacity: 1;
	}
}

/********************************* HELPME DIALOG *********************************/
.helpme ul {
	padding-inline-start: 0;
}
.helpme li {
	list-style: none;
	text-indent: 0%;
	margin-bottom: 1.5em;

	display: flex;
	flex-direction: row;
	justify-content: space-between;
}
.helpme span {
	width: 100%;
}

/********************************* TAB BAR *********************************/
.tab-bar {
	display: flex;
	gap: 0;
	transition: var(--transition);
	margin-bottom: calc(var(--base-height) / 2);
}

.tab-bar button {
	appearance: none;
	padding: 0;
	background: none;
	border: none;
	border-bottom: var(--line-width) solid var(--divider-col);
	cursor: pointer;
	color: var(--text-col);
	text-align: center;
}
.tab-bar button:hover {
	color: var(--hover-col);
}
.tab-bar button:focus {
	outline: none;
}
.tab-bar button.active {
	border-bottom: var(--line-width) solid var(--base-col);
	font-weight: bold;
}
.tab-bar button:hover {
	border-bottom: var(--line-width) solid var(--hover-col);
}

/********************************* AUXILIARY *********************************/
code {
	/* used for displaying buttons keys */
	font-family: monospace;
	font-size: 1em;
	padding: 0.333em 0.667em;
	background: var(--base-col);
	color: var(--text-col-on-base);
	border-radius: 3px;
}

ul li,
ol li {
	line-height: 1.5em;
}

.gui-filler {
	height: 100%;
}
